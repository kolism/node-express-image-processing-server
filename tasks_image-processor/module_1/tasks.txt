TASK 1:
In the index.html file, inside the client directory, we are going to add a form tag. Let's put it inside the body.

TASK 2:
Add a method of post to the form. Add an enctype attribute with the string "multipart/form-data" to the form tag. Add an action attribue with the string "/upload". 

TASK 3:
Inside our form, add an input with a class name of "file-input". Give it a type attribute with the string value "file".
Then give it a name attribute with the string value of "photo".

TASK 4:
Under our file input, let's create another input tag.
It should have a class of "submit-button", a type attribute of "submit", and a value attribute of "Submit".

TASK 5:
Let's open up App.js inside the api directory.
Let's start out by requiring "express" and "path". Next create a const called app and let's assign a call to the express function. Next let's export our app using module.exports.

Task 6:
Next let's define a constant to represent the path to our index.html file. Assign to it a call to path.join. Let's pass the current directory as the first argument and a string value of '../client/index.html' as the second arg.
Let's call the use method of our app. For the route argument, let's pass a string of '/*'. 
For the route handler we will pass an anonymous function passing in the request and response as arguments.
Inside the function's body, call the sendFile method of response, passing in
the root constant and the file index.html.

Module Outro:
At this point we have a working server that will serve our upload page.
Let's run yarn start to start up our server. Let's open up our browser and go to localhost port 3000.
